// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v3.21.12
// source: tali.proto

package talipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration message to specify compression methods and bloom filter type
type Segment_CompressionMethod int32

const (
	Segment_COMPRESSION_METHOD_UNSPECIFIED Segment_CompressionMethod = 0 // Default value, unspecified
	Segment_ZSTD                           Segment_CompressionMethod = 1 // Gzip compression
)

// Enum value maps for Segment_CompressionMethod.
var (
	Segment_CompressionMethod_name = map[int32]string{
		0: "COMPRESSION_METHOD_UNSPECIFIED",
		1: "ZSTD",
	}
	Segment_CompressionMethod_value = map[string]int32{
		"COMPRESSION_METHOD_UNSPECIFIED": 0,
		"ZSTD":                           1,
	}
)

func (x Segment_CompressionMethod) Enum() *Segment_CompressionMethod {
	p := new(Segment_CompressionMethod)
	*p = x
	return p
}

func (x Segment_CompressionMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Segment_CompressionMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_tali_proto_enumTypes[0].Descriptor()
}

func (Segment_CompressionMethod) Type() protoreflect.EnumType {
	return &file_tali_proto_enumTypes[0]
}

func (x Segment_CompressionMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Segment_CompressionMethod.Descriptor instead.
func (Segment_CompressionMethod) EnumDescriptor() ([]byte, []int) {
	return file_tali_proto_rawDescGZIP(), []int{0, 0}
}

// BloomfilterType denotes which bloomfilter is used.
type Segment_BloomfilterType int32

const (
	Segment_BLOOMFILTER_TYPE_UNSPECIFIED Segment_BloomfilterType = 0
	Segment_BINARY_FUSE                  Segment_BloomfilterType = 1
)

// Enum value maps for Segment_BloomfilterType.
var (
	Segment_BloomfilterType_name = map[int32]string{
		0: "BLOOMFILTER_TYPE_UNSPECIFIED",
		1: "BINARY_FUSE",
	}
	Segment_BloomfilterType_value = map[string]int32{
		"BLOOMFILTER_TYPE_UNSPECIFIED": 0,
		"BINARY_FUSE":                  1,
	}
)

func (x Segment_BloomfilterType) Enum() *Segment_BloomfilterType {
	p := new(Segment_BloomfilterType)
	*p = x
	return p
}

func (x Segment_BloomfilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Segment_BloomfilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_tali_proto_enumTypes[1].Descriptor()
}

func (Segment_BloomfilterType) Type() protoreflect.EnumType {
	return &file_tali_proto_enumTypes[1]
}

func (x Segment_BloomfilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Segment_BloomfilterType.Descriptor instead.
func (Segment_BloomfilterType) EnumDescriptor() ([]byte, []int) {
	return file_tali_proto_rawDescGZIP(), []int{0, 1}
}

// Tali segment
type Segment struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Config         *Segment_Config        `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`                                       // Configuration field for compression and bloom filter type
	NgramIndex     []byte                 `protobuf:"bytes,2,opt,name=ngram_index,json=ngramIndex,proto3" json:"ngram_index,omitempty"`             // Byte array to store the bloom filter
	CompressedData []byte                 `protobuf:"bytes,3,opt,name=compressed_data,json=compressedData,proto3" json:"compressed_data,omitempty"` // Byte array to store compressed data
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_tali_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_tali_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_tali_proto_rawDescGZIP(), []int{0}
}

func (x *Segment) GetConfig() *Segment_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Segment) GetNgramIndex() []byte {
	if x != nil {
		return x.NgramIndex
	}
	return nil
}

func (x *Segment) GetCompressedData() []byte {
	if x != nil {
		return x.CompressedData
	}
	return nil
}

type Segment_Config struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	CompressionMethod Segment_CompressionMethod `protobuf:"varint,1,opt,name=compression_method,json=compressionMethod,proto3,enum=tali.Segment_CompressionMethod" json:"compression_method,omitempty"`
	NgramIndex        Segment_BloomfilterType   `protobuf:"varint,2,opt,name=ngram_index,json=ngramIndex,proto3,enum=tali.Segment_BloomfilterType" json:"ngram_index,omitempty"` // TODO: Add the TRACE ID index
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Segment_Config) Reset() {
	*x = Segment_Config{}
	mi := &file_tali_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment_Config) ProtoMessage() {}

func (x *Segment_Config) ProtoReflect() protoreflect.Message {
	mi := &file_tali_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment_Config.ProtoReflect.Descriptor instead.
func (*Segment_Config) Descriptor() ([]byte, []int) {
	return file_tali_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Segment_Config) GetCompressionMethod() Segment_CompressionMethod {
	if x != nil {
		return x.CompressionMethod
	}
	return Segment_COMPRESSION_METHOD_UNSPECIFIED
}

func (x *Segment_Config) GetNgramIndex() Segment_BloomfilterType {
	if x != nil {
		return x.NgramIndex
	}
	return Segment_BLOOMFILTER_TYPE_UNSPECIFIED
}

var File_tali_proto protoreflect.FileDescriptor

var file_tali_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x61, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x61,
	0x6c, 0x69, 0x22, 0xa5, 0x03, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x61, 0x6c, 0x69, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x6e, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x98, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x4e, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x74, 0x61, 0x6c, 0x69, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x11,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x6e, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x61, 0x6c, 0x69, 0x2e, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6e, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x41, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4d, 0x50, 0x52, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x53,
	0x54, 0x44, 0x10, 0x01, 0x22, 0x44, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x4c, 0x4f, 0x4f, 0x4d,
	0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x49, 0x4e,
	0x41, 0x52, 0x59, 0x5f, 0x46, 0x55, 0x53, 0x45, 0x10, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x74, 0x61,
	0x6c, 0x69, 0x2f, 0x74, 0x61, 0x6c, 0x69, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tali_proto_rawDescOnce sync.Once
	file_tali_proto_rawDescData = file_tali_proto_rawDesc
)

func file_tali_proto_rawDescGZIP() []byte {
	file_tali_proto_rawDescOnce.Do(func() {
		file_tali_proto_rawDescData = protoimpl.X.CompressGZIP(file_tali_proto_rawDescData)
	})
	return file_tali_proto_rawDescData
}

var file_tali_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tali_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tali_proto_goTypes = []any{
	(Segment_CompressionMethod)(0), // 0: tali.Segment.CompressionMethod
	(Segment_BloomfilterType)(0),   // 1: tali.Segment.BloomfilterType
	(*Segment)(nil),                // 2: tali.Segment
	(*Segment_Config)(nil),         // 3: tali.Segment.Config
}
var file_tali_proto_depIdxs = []int32{
	3, // 0: tali.Segment.config:type_name -> tali.Segment.Config
	0, // 1: tali.Segment.Config.compression_method:type_name -> tali.Segment.CompressionMethod
	1, // 2: tali.Segment.Config.ngram_index:type_name -> tali.Segment.BloomfilterType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tali_proto_init() }
func file_tali_proto_init() {
	if File_tali_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tali_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tali_proto_goTypes,
		DependencyIndexes: file_tali_proto_depIdxs,
		EnumInfos:         file_tali_proto_enumTypes,
		MessageInfos:      file_tali_proto_msgTypes,
	}.Build()
	File_tali_proto = out.File
	file_tali_proto_rawDesc = nil
	file_tali_proto_goTypes = nil
	file_tali_proto_depIdxs = nil
}
